sub=subset(dataset_H0False_ss,dataset_H0False_ss$scenario==i & dataset_H0False_ss$p_init==1.0)
univ=rbind(sub,sub)
univ$testind=c(rep("RE",dim(sub)[1]),rep("CE",dim(sub)[1]))
univ$test=ifelse(univ$testind=="RE",univ$Test_Power_RE,univ$Test_Power_CE)
# univ$ss_decision = ifelse(dataset$decision_ES_SS<1, "RE", "CE")
#
p[[enum]] <-ggplot(sub, aes(x=corr, y=Test_Power_ES_SS))  +
geom_point(size=2)+ ggtitle(paste("Scenario", dataset_H0False_ss$scenario[it], "\n (p1,p2,OR1,OR2) \n=(", dataset_H0False_ss$p0_e1[it],",",dataset_H0False_ss$p0_e2[it],",",dataset_H0False_ss$OR1[it],",",dataset_H0False_ss$OR2[it],")"))+geom_point(size=2)  + labs(y = "Power (AD)", x="Correlation", color="Decision SS") + coord_cartesian(ylim = c(0.40, 1))+ geom_path()+ theme(plot.title = element_text(size=9),legend.position="bottom", legend.title = element_text(size = 6), legend.text = element_text(size = 6))
# + theme(plot.title = element_text(size=9),legend.position = c(0.8, 0.2))
#
p[[enum+1]] <- ggplot(univ, aes(x=corr, y=test, color=as.factor(testind)))+
geom_point(size=2)+ ggtitle(paste("Scenario", dataset_H0False_ss$scenario[it], "\n (p1,p2,OR1,OR2) \n=(", dataset_H0False_ss$p0_e1[it],",",dataset_H0False_ss$p0_e2[it],",",dataset_H0False_ss$OR1[it],",",dataset_H0False_ss$OR2[it],")"))+geom_point(size=2)  + labs(y = "Power (CD/RD)", x="Correlation", color="Decision") + coord_cartesian(ylim = c(0.40, 1))+ geom_path()+ theme(plot.title = element_text(size=9),legend.position="bottom",#legend.position = c(0.8, 0.2),
legend.title = element_text(size = 6), legend.text = element_text(size = 6))
enum=enum+2
it <- it + dim(subset(dataset_H0False_ss,dataset_H0False_ss$scenario==i))
}
plot <- marrangeGrob(p,ncol=2,nrow=2,top=NULL)
plot
# ggsave(file="results_withoutss.pdf", plot, width = 210, height = 297, units = "mm")
ggsave(file="results_diffcorr.pdf", plot, width = 210, height = 297, units = "mm")
View(dataset)
sss=Vectorize(
function(rho0,step,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
c(rho0,rho1,ss,ss_av,ss_eq)
},vectorize.args = "rho0")
sss(rho0=0.2,step=10)
sss=Vectorize(
function(rho0,step,rho1=seq(0,max,length.out=step),p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
c(rho0,rho1,ss,ss_av,ss_eq)
},vectorize.args = "rho0")
sss(rho0=0.2,step=10)
exp(c(1,2,3))
#########################################
rm(list = ls())
setwd("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/CBE_selection/CODE_paper/simulations")
# setwd("H:/Code_PAPER_biost")
source('C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/CBE_selection/CODE_paper/simulations/aux_functions.R')
source('C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/CBE_selection/eselect/R/eselect.R')
# source('H:/Code_PAPER_biost/eselect/R/eselectsim.R')
# source('H:/Code_PAPER_biost/eselect/R/eselect_ub.R')
# source('H:/Code_PAPER_biost/eselect/R/eselectsim_ub.R')
library(tidyverse)
library(tidyr)
library(plyr)
library(devtools)
library(CompAREdesign)
library(ggplot2)
library(gridExtra)
library(ggpubr)
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2
upper_corr(p_e1=p0_e1, p_e2=p0_e2)
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
max
rho0
rho0=0.2
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;rho1=seq(0,max,length.out=5)
step=5
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;step=5
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
rho1=seq(0,max,length.out=step)
prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
rho1
prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
OR_ce
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
ss
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;step=5
sss=Vectorize(
function(rho0,step=5,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
c(rho0,rho1,ss,ss_av,ss_eq)
},vectorize.args = "rho0")
sss(rho0=0.2)
##################################################################################
# Research project Vienna - Bcn
# Endpoint selection and sample size reassessment for composite binary endpoints
# Simulation study for supp material
# Evaluating the power of the proposed design under diff correlations
##################################################################################
#########################################
rm(list = ls())
setwd("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/CBE_selection/CODE_paper/simulations")
# setwd("H:/Code_PAPER_biost")
source('C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/CBE_selection/CODE_paper/simulations/aux_functions.R')
source('C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/CBE_selection/eselect/R/eselect.R')
# source('H:/Code_PAPER_biost/eselect/R/eselectsim.R')
# source('H:/Code_PAPER_biost/eselect/R/eselect_ub.R')
# source('H:/Code_PAPER_biost/eselect/R/eselectsim_ub.R')
#########################################
# Preamble
#########################################
# install.packages(c("CompAREdesign","tidyverse","tidyr","plyr","devtools","ggplot2","gridExtra","ggpubr"))
# install.packages("tidyverse")
# install.packages("tidyr")
# install.packages("plyr")
# install.packages("devtools")
# install.packages("CompAREdesign")
# install.packages("ggplot2")
# install.packages("gridExtra")
# install.packages("ggpubr")
library(tidyverse)
library(tidyr)
library(plyr)
library(devtools)
library(CompAREdesign)
library(ggplot2)
library(gridExtra)
library(ggpubr)
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;step=5
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
ss
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
ss_av
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
ss_eq
rho1
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;step=5
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;step=5
sss=Vectorize(
function(rho0,step=5,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
# c(rho0,rho1,ss,ss_av,ss_eq)
c(rho1,ss,ss_av)
},vectorize.args = "rho1")
sss(rho0=0.2)
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;step=5
sss=Vectorize(
function(rho0,step=5,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
# c(rho0,rho1,ss,ss_av,ss_eq)
c(rho1,ss,ss_av)
})
sss(rho0=0.2)
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;step=5
sss=Vectorize(
function(rho0,step=5,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
# c(rho0,rho1,ss,ss_av,ss_eq)
c(rho1,ss,ss_av)
},vectorize.args = "rho0")
sss(rho0=0.2)
rho1
ss
ss_av
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;step=5
sss=Vectorize(
function(rho0,step=5,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
# c(rho0,rho1,ss,ss_av,ss_eq)
c(rho1,ss,ss_av)
},vectorize.args = "rho1")
sss(rho0=0.2)
max
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;step=5
rho1=seq(0,max,length.out=step)
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
sss=Vectorize(
function(rho1=seq(0,0.5,length.out=5),rho0=0.2,step=5,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
# max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
# rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
# c(rho0,rho1,ss,ss_av,ss_eq)
c(rho1,ss,ss_av)
},vectorize.args = "rho1")
sss(rho0=0.2)
sss=Vectorize(
function(rho0,rho1=seq(0,0.5,length.out=5),step=5,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
# max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
# rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
# c(rho0,rho1,ss,ss_av,ss_eq)
c(rho1,ss,ss_av)
},vectorize.args = "rho1")
sss(rho0=0.2)
rho1=seq(0,0.5,length.out=5)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
ss
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
ss_av
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
ss_eq
list(rho1,ss,ss_av)
sss=Vectorize(
function(rho1,rho0=0.2,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
# max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
# rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
# c(rho0,rho1,ss,ss_av,ss_eq)
list(rho1,ss,ss_av)
},vectorize.args = "rho1")
sss(rho1=0.5)
sss=Vectorize(
function(rho1,rho0=0.2,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
# max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
# rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
# c(rho0,rho1,ss,ss_av,ss_eq)
list(rho0,rho1,ss,ss_av,ss_eq)
},vectorize.args = "rho1")
sss(rho1=0.5)
sss(rho1=seq(0,0.5,length.out=5))
sss(rho1=seq(0,0.5,length.out=10))
ss_example[1,]
ss_example = sss(rho1=seq(0,0.5,length.out=10))
ss_example[1,]
ss_example
ss_example = sss(rho1=seq(0,0.5,length.out=10))
# fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
# res=fr1(0.49)
plot(ss_example[2,],ss_example[3,],type="l")
# fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
# res=fr1(0.49)
plot(ss_example[2,],ss_example[3,],type="l")
# ,ylim=c(0,.5),xlim=c(0,1),xlab=expression(r[2]),ylab="Allocation Ratios Period 2 as fraction of N2",main="Case 3",sub="(r1=0,0.2,0.4,0.49)",lty=1)
lines(ss_example[2,],ss_example[4,],col="red")
lines(ss_example[2,],ss_example[5,],col="blue")
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;step=5
rho1=seq(0,max,length.out=step)
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
sss=Vectorize(
function(rho1,rho0=0.2,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
# max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
# rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
# c(rho0,rho1,ss,ss_av,ss_eq)
list(rho0,rho1,ss,ss_av,ss_eq,p0_ce,p1_ce,OR_ce)
},vectorize.args = "rho1")
sss(rho1=0.5)
# fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
# res=fr1(0.49)
plot(ss_example[2,],ss_example[3,],type="l")
ss_example = sss(rho1=seq(0,0.5,length.out=10))
(ss_example = sss(rho1=seq(0,0.5,length.out=10)))
# fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
# res=fr1(0.49)
plot(ss_example[2,],ss_example[3,],type="l",ylab="Sample sizes")
# fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
# res=fr1(0.49)
plot(ss_example[2,],ss_example[3,],type="l",ylab="Sample sizes",xlab="Correlation")
(ss_example = sss(rho1=seq(0,0.4,length.out=10)))
# fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
# res=fr1(0.49)
plot(ss_example[2,],ss_example[3,],type="l",ylab="Sample sizes",xlab="Correlation",xlim=c(0,1))
# fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
# res=fr1(0.49)
plot(ss_example[2,],ss_example[3,],type="l",ylab="Sample sizes",xlab="Correlation",xlim=c(0,0.5))
# ,ylim=c(0,.5),xlim=c(0,1),xlab=expression(r[2]),ylab="Allocation Ratios Period 2 as fraction of N2",main="Case 3",sub="(r1=0,0.2,0.4,0.49)",lty=1)
lines(ss_example[2,],ss_example[4,],col="red")
lines(ss_example[2,],ss_example[5,],col="blue")
(ss_example = sss(rho1=seq(0.1,0.2,length.out=10)))
# fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
# res=fr1(0.49)
plot(ss_example[2,],ss_example[3,],type="l",ylab="Sample sizes",xlab="Correlation",xlim=c(0,0.5))
# ,ylim=c(0,.5),xlim=c(0,1),xlab=expression(r[2]),ylab="Allocation Ratios Period 2 as fraction of N2",main="Case 3",sub="(r1=0,0.2,0.4,0.49)",lty=1)
lines(ss_example[2,],ss_example[4,],col="red")
lines(ss_example[2,],ss_example[5,],col="blue")
sss(rho1=0.5)
(ss_example = sss(rho1=seq(0,0.4,length.out=10)))
# fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
# res=fr1(0.49)
plot(ss_example[2,],ss_example[3,],type="l",ylab="Sample sizes",xlab="Correlation",xlim=c(0,0.5))
# ,ylim=c(0,.5),xlim=c(0,1),xlab=expression(r[2]),ylab="Allocation Ratios Period 2 as fraction of N2",main="Case 3",sub="(r1=0,0.2,0.4,0.49)",lty=1)
lines(ss_example[2,],ss_example[4,],col="red")
lines(ss_example[2,],ss_example[5,],col="blue")
#####################################################################################
#####################################################################################
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/CBE_selection/CODE_paper/simulations/results/results_diffcorr.RData")
View(dataset)
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;step=5
rho1=seq(0,max,length.out=step)
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
sss=Vectorize(
function(rho1,rho0=0.2,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.21,alpha=0.05,beta=0.2){
# max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
# rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
# c(rho0,rho1,ss,ss_av,ss_eq)
list(rho0,rho1,ss,ss_av,ss_eq,p0_ce,p1_ce,OR_ce)
},vectorize.args = "rho1")
sss(rho1=0.5)
(ss_example = sss(rho1=seq(0,0.4,length.out=10)))
# fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
# res=fr1(0.49)
plot(ss_example[2,],ss_example[3,],type="l",ylab="Sample sizes",xlab="Correlation",xlim=c(0,0.5))
# ,ylim=c(0,.5),xlim=c(0,1),xlab=expression(r[2]),ylab="Allocation Ratios Period 2 as fraction of N2",main="Case 3",sub="(r1=0,0.2,0.4,0.49)",lty=1)
lines(ss_example[2,],ss_example[4,],col="red")
lines(ss_example[2,],ss_example[5,],col="blue")
p0_e1=0.1;p0_e2=0.25;p1_e1=0.06;p1_e2=0.19;alpha=0.05;beta=0.2;rho0=0.2;step=5
rho1=seq(0,max,length.out=step)
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
sss=Vectorize(
function(rho1,rho0=0.2,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.21,alpha=0.05,beta=0.2){
# max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
# rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
# c(rho0,rho1,ss,ss_av,ss_eq)
list(rho0,rho1,ss,ss_av,ss_eq,p0_ce,p1_ce,OR_ce)
},vectorize.args = "rho1")
sss(rho1=0.5)
(ss_example = sss(rho1=seq(0,0.4,length.out=10)))
(ss_example = sss(rho1=seq(0.1,0.3,length.out=10)))
# fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
# res=fr1(0.49)
plot(ss_example[2,],ss_example[3,],type="l",ylab="Sample sizes",xlab="Correlation",xlim=c(0,0.5))
# fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
# res=fr1(0.49)
plot(ss_example[2,],ss_example[3,],type="l",ylab="Sample sizes",xlab="Correlation")#,xlim=c(0,0.5)
# ,ylim=c(0,.5),xlim=c(0,1),xlab=expression(r[2]),ylab="Allocation Ratios Period 2 as fraction of N2",main="Case 3",sub="(r1=0,0.2,0.4,0.49)",lty=1)
lines(ss_example[2,],ss_example[4,],col="red")
lines(ss_example[2,],ss_example[5,],col="blue")
plot(ss_example[2,],ss_example[3,],type="l",ylab="Sample sizes",xlab="Correlation in arm 1")#,xlim=c(0,0.5)
lines(ss_example[2,],ss_example[4,],col="red")
lines(ss_example[2,],ss_example[5,],col="blue")
(ss_example = sss(rho1=seq(0.1,0.3,length.out=10)))
(ss_example = sss(rho1=seq(0.1,0.3,length.out=10)))
