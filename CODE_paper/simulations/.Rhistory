#####################################################################################
#####################################################################################
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/CBE_selection/CODE_paper/simulations/results/results_diffcorr.RData")
##################################################################################
p <- list()
enum = 1
it <- 1
for(i in 1:max(dataset_H0False_ss$scenario)){
sub=subset(dataset_H0False_ss,dataset_H0False_ss$scenario==i & dataset_H0False_ss$p_init==1.0)
univ=rbind(sub,sub)
univ$testind=c(rep("RE",dim(sub)[1]),rep("CE",dim(sub)[1]))
univ$test=ifelse(univ$testind=="RE",univ$Test_Power_RE,univ$Test_Power_CE)
# univ$ss_decision = ifelse(dataset$decision_ES_SS<1, "RE", "CE")
#
p[[enum]] <-ggplot(sub, aes(x=corr, y=Test_Power_ES_SS))  +
geom_point(size=2)+ ggtitle(paste("Scenario", dataset_H0False_ss$scenario[it], "\n (p1,p2,OR1,OR2) \n=(", dataset_H0False_ss$p0_e1[it],",",dataset_H0False_ss$p0_e2[it],",",dataset_H0False_ss$OR1[it],",",dataset_H0False_ss$OR2[it],")"))+geom_point(size=2)  + labs(y = "Power (AD)", x="Correlation", color="Decision SS") + coord_cartesian(ylim = c(0.40, 1))+ geom_path()+ theme(plot.title = element_text(size=9),legend.position="bottom", legend.title = element_text(size = 6), legend.text = element_text(size = 6))
# + theme(plot.title = element_text(size=9),legend.position = c(0.8, 0.2))
#
p[[enum+1]] <- ggplot(univ, aes(x=corr, y=test, color=as.factor(testind)))+
geom_point(size=2)+ ggtitle(paste("Scenario", dataset_H0False_ss$scenario[it], "\n (p1,p2,OR1,OR2) \n=(", dataset_H0False_ss$p0_e1[it],",",dataset_H0False_ss$p0_e2[it],",",dataset_H0False_ss$OR1[it],",",dataset_H0False_ss$OR2[it],")"))+geom_point(size=2)  + labs(y = "Power (CD/RD)", x="Correlation", color="Decision") + coord_cartesian(ylim = c(0.40, 1))+ geom_path()+ theme(plot.title = element_text(size=9),legend.position="bottom",#legend.position = c(0.8, 0.2),
legend.title = element_text(size = 6), legend.text = element_text(size = 6))
enum=enum+2
it <- it + dim(subset(dataset_H0False_ss,dataset_H0False_ss$scenario==i))
}
plot <- marrangeGrob(p,ncol=2,nrow=2,top=NULL)
library(tidyverse)
library(tidyr)
library(plyr)
library(devtools)
library(CompAREdesign)
library(ggplot2)
library(gridExtra)
library(ggpubr)
setwd("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/CBE_selection/CODE_paper/simulations")
# setwd("H:/Code_PAPER_biost")
source('C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/CBE_selection/CODE_paper/simulations/aux_functions.R')
source('C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/CBE_selection/eselect/R/eselect.R')
# source('H:/Code_PAPER_biost/eselect/R/eselectsim.R')
# source('H:/Code_PAPER_biost/eselect/R/eselect_ub.R')
# source('H:/Code_PAPER_biost/eselect/R/eselectsim_ub.R')
#########################################
#####################################################################################
#####################################################################################
load("C:/Users/mbofi/Dropbox/C5/Scripts/GitKraken/CBE_selection/CODE_paper/simulations/results/results_diffcorr.RData")
# selecting only those scenarios without interim analysis
dataset$ss_decision = ifelse(dataset$decision_ES_SS<1, "RE", "CE")
dataset_H0False_ss = subset(dataset,dataset$p_init==1)
# rm(dataset)
#
##################################################################################
p <- list()
enum = 1
it <- 1
for(i in 1:max(dataset_H0False_ss$scenario)){
sub=subset(dataset_H0False_ss,dataset_H0False_ss$scenario==i & dataset_H0False_ss$p_init==1.0)
univ=rbind(sub,sub)
univ$testind=c(rep("RE",dim(sub)[1]),rep("CE",dim(sub)[1]))
univ$test=ifelse(univ$testind=="RE",univ$Test_Power_RE,univ$Test_Power_CE)
# univ$ss_decision = ifelse(dataset$decision_ES_SS<1, "RE", "CE")
#
p[[enum]] <-ggplot(sub, aes(x=corr, y=Test_Power_ES_SS))  +
geom_point(size=2)+ ggtitle(paste("Scenario", dataset_H0False_ss$scenario[it], "\n (p1,p2,OR1,OR2) \n=(", dataset_H0False_ss$p0_e1[it],",",dataset_H0False_ss$p0_e2[it],",",dataset_H0False_ss$OR1[it],",",dataset_H0False_ss$OR2[it],")"))+geom_point(size=2)  + labs(y = "Power (AD)", x="Correlation", color="Decision SS") + coord_cartesian(ylim = c(0.40, 1))+ geom_path()+ theme(plot.title = element_text(size=9),legend.position="bottom", legend.title = element_text(size = 6), legend.text = element_text(size = 6))
# + theme(plot.title = element_text(size=9),legend.position = c(0.8, 0.2))
#
p[[enum+1]] <- ggplot(univ, aes(x=corr, y=test, color=as.factor(testind)))+
geom_point(size=2)+ ggtitle(paste("Scenario", dataset_H0False_ss$scenario[it], "\n (p1,p2,OR1,OR2) \n=(", dataset_H0False_ss$p0_e1[it],",",dataset_H0False_ss$p0_e2[it],",",dataset_H0False_ss$OR1[it],",",dataset_H0False_ss$OR2[it],")"))+geom_point(size=2)  + labs(y = "Power (CD/RD)", x="Correlation", color="Decision") + coord_cartesian(ylim = c(0.40, 1))+ geom_path()+ theme(plot.title = element_text(size=9),legend.position="bottom",#legend.position = c(0.8, 0.2),
legend.title = element_text(size = 6), legend.text = element_text(size = 6))
enum=enum+2
it <- it + dim(subset(dataset_H0False_ss,dataset_H0False_ss$scenario==i))
}
plot <- marrangeGrob(p,ncol=2,nrow=2,top=NULL)
plot
# ggsave(file="results_withoutss.pdf", plot, width = 210, height = 297, units = "mm")
ggsave(file="results_diffcorr.pdf", plot, width = 210, height = 297, units = "mm")
View(dataset)
sss=Vectorize(
function(rho0,step,p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
rho1=seq(0,max,length.out=step)
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
c(rho0,rho1,ss,ss_av,ss_eq)
},vectorize.args = "rho0")
sss(rho0=0.2,step=10)
sss=Vectorize(
function(rho0,step,rho1=seq(0,max,length.out=step),p0_e1=0.1,p0_e2=0.25,p1_e1=0.06,p1_e2=0.19,alpha=0.05,beta=0.2){
max=min(upper_corr(p_e1=p0_e1, p_e2=p0_e2),upper_corr(p_e1=p1_e1, p_e2=p1_e2))
p0_ce=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho1)
OR_ce=(p1_ce/(1-p1_ce))/(p0_ce/(1-p0_ce))
ss=samplesize_OR(p0=p0_ce, OR=OR_ce, alpha=alpha, beta=beta)
p0_ce_av=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=(rho0+rho1)/2)
p1_ce_av=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=(rho0+rho1)/2)
OR_ce_av=(p1_ce_av/(1-p1_ce_av))/(p0_ce_av/(1-p0_ce_av))
ss_av=samplesize_OR(p0=p0_ce_av, OR=OR_ce_av, alpha=alpha, beta=beta)
p0_ce_eq=prob_cbe(p_e1=p0_e1, p_e2=p0_e2, rho=rho0)
p1_ce_eq=prob_cbe(p_e1=p1_e1, p_e2=p1_e2, rho=rho0)
OR_ce_eq=(p1_ce_eq/(1-p1_ce_eq))/(p0_ce_eq/(1-p0_ce_eq))
ss_eq=samplesize_OR(p0=p0_ce_eq, OR=OR_ce_eq, alpha=alpha, beta=beta)
c(rho0,rho1,ss,ss_av,ss_eq)
},vectorize.args = "rho0")
sss(rho0=0.2,step=10)
